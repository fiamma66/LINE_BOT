version: '3'
services: 
  jupyter:
    build:
      context: ./
      dockerfile: dockerfile-jupyter
    image: fiamma66/line_bot_jupyter:latest
    container_name: jupyter
    restart: always
    ports:
      - "8888:8888"
      - "5000:5000"
    volumes:
      - ./:/home/jovyan/work
    command: start-notebook.sh --NotebookApp.token="TOKEN"
  ngrok:
    image: wernight/ngrok 
    container_name: ngrok
    depends_on: 
      - jupyter
    ports:
      - "4040:4040"
    command: ngrok http --authtoken TOKEN jupyter:5000

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://IP_SERVER:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: mytopics:1:1
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mongodb:
    image: 'bitnami/mongodb:latest'
    ports:
      - "27017:27017"
    environment:
      - MONGODB_USERNAME=root
      - MONGODB_PASSWORD=PASSWORD
      - MONGODB_DATABASE=res
    volumes: 
      - ./mongoData:/bitnami



